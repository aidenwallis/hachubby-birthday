{"version":3,"sources":["js/constants.js","js/util/helpers.js","js/controllers/background.js","js/controllers/card.js","js/controllers/loading.js","js/controllers/control.js","js/app.js"],"names":["CARD_ID","PAGE_COUNT","BACKGROUND_IMAGE","require","CARD_PAGE","page","Date","now","FRONT_IMAGE","preloadImage","url","Promise","resolve","reject","image","Image","onload","onerror","src","BackgroundController","element_","document","getElementById","activeClass_","style","backgroundImage","classList","add","PAGE_TYPE","front","back","CardController","appElement","pageCount","appElement_","pageCount_","pages_","cardElement_","createElement","className","currentIndex_","flippedClass_","currentLayer_","flipping_","pages","push","pageNumber","type","i","length","minIndex","doublePage","newPage","prepend","pageData","draggable","appendChild","childNodes","requestAnimationFrame","curNode","remove","setTimeout","zIndex","LoadingController","ICONS","left","right","ControlController","cardController","cardController_","containerElement_","control","direction","onclick","back_","next_","addEventListener","e","keyCode","preventDefault","navigateBack","navigateNext","controlController","loadingController","show","then","images","Array","createPages","build","hide","mount","registerKeys"],"mappings":"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","file":"app.82f9cebf.js","sourceRoot":"../src","sourcesContent":["export const CARD_ID = '49d9ad4b223d1a2';\nexport const PAGE_COUNT = 41;\nexport const BACKGROUND_IMAGE = require('../images/table-background.jpg');\nexport const CARD_PAGE = (page) => `https://groupgreeting.storage.googleapis.com/cards/${CARD_ID}/pages/${CARD_ID}_${page}.png?t=${Date.now()}`;\nexport const FRONT_IMAGE = 'https://placehold.it/460x570.png';\n","export function preloadImage(url) {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.onload = resolve;\n    image.onerror = reject;\n    image.src = url;\n  });\n}\n","export default class BackgroundController {\n  constructor() {\n    this.element_ = document.getElementById('background');\n    this.activeClass_ = 'background--loaded';\n  }\n\n  show(url) {\n    this.element_.style.backgroundImage = `url(${url})`;\n    this.element_.classList.add(this.activeClass_);\n  }\n}\n","import { FRONT_IMAGE } from '../constants';\n\nconst PAGE_TYPE = {\n  front: 'front',\n  page: 'page',\n  back: 'back',\n};\n\nexport default class CardController {\n  constructor(appElement, pageCount) {\n    this.appElement_ = appElement;\n    this.pageCount_ = pageCount;\n    this.pages_ = [];\n\n    this.cardElement_ = document.createElement('div');\n    this.cardElement_.className = 'card';\n\n    this.currentIndex_ = 0;\n    this.flippedClass_ = 'page--flipped';\n    this.currentLayer_ = 1;\n    this.flipping_ = false;\n  }\n\n  createPages(pages) {\n    // Add front page\n    this.pages_.push({\n      pageNumber: 1,\n      type: PAGE_TYPE.front,\n      src: FRONT_IMAGE,\n    });\n\n    for (let i = 0; i < pages.length; ++i) {\n      const pageNumber = i + 1;\n      this.pages_.push({\n        pageNumber: pageNumber,\n        type: PAGE_TYPE.page,\n        src: pages[i],\n      });\n    }\n  }\n\n  build() {\n    const minIndex = 2;\n    let currentIndex = this.pages_.length + minIndex;\n    let doublePage = null;\n    let newPage = true;\n\n    for (let i = 0; i < this.pages_.length; ++i) {\n      if (newPage) {\n        doublePage && this.cardElement_.prepend(doublePage);\n        doublePage = document.createElement('div');\n        doublePage.className = 'double-page';\n      }\n\n      const pageData = this.pages_[i];\n      const page = document.createElement('div');\n      page.className = `page page--type-${PAGE_TYPE[pageData.type]} page--${newPage ? 'front' : 'back'}`;\n      const image = document.createElement('img');\n      image.className = 'page__image';\n      image.src = pageData.src;\n      image.draggable = false;\n\n      newPage = !newPage;\n      page.appendChild(image);\n      doublePage.prepend(page);\n    }\n\n    this.currentIndex_ = this.cardElement_.childNodes.length - 1;\n  }\n\n  mount() {\n    this.appElement_.appendChild(this.cardElement_);\n  }\n\n  navigateBack() {\n    if (this.flipping_) {\n      return;\n    }\n    if (this.currentIndex_ === this.cardElement_.childNodes.length - 1) {\n      return;\n    }\n    this.flipping_ = true;\n    ++this.currentIndex_;\n    --this.currentLayer_;\n    requestAnimationFrame(() => {\n      const curNode = this.cardElement_.childNodes[this.currentIndex_];\n      curNode.classList.remove(this.flippedClass_);\n      setTimeout(() => {\n        curNode.style.zIndex = null;\n      }, 750 / 2);\n      setTimeout(() => {\n        this.flipping_ = false;\n      }, 750);\n    });\n  }\n\n  navigateNext() {\n    if (this.flipping_) {\n      return;\n    }\n    if (this.currentIndex_ < 0) {\n      return;\n    }\n    this.flipping_ = true;\n    requestAnimationFrame(() => {\n      const curNode = this.cardElement_.childNodes[this.currentIndex_];\n      curNode.classList.add(this.flippedClass_);\n      curNode.style.zIndex = this.currentLayer_;\n      ++this.currentLayer_;\n      --this.currentIndex_;\n      setTimeout(() => {\n        this.flipping_ = false;\n      }, 750);\n    });\n  }\n}\n","export default class LoadingController {\n  constructor() {\n    this.element_ = document.getElementById('loading');\n    this.activeClass_ = 'loading--active';\n  }\n\n  show() {\n    this.element_.classList.add(this.activeClass_);\n  }\n\n  hide() {\n    this.element_.classList.remove(this.activeClass_);\n  }\n}\n","const ICONS = {\n  left: require('../../images/arrow-circle-left-solid.svg'),\n  right: require('../../images/arrow-circle-right-solid.svg'),\n};\n\nexport default class ControlController {\n  constructor(appElement, cardController) {\n    this.appElement_ = appElement;\n    this.cardController_ = cardController;\n\n    this.containerElement_ = document.createElement('div');\n    this.containerElement_.className = 'controls flex justify--center';\n  }\n\n  mount() {\n    for (let i = 0; i < 2; ++i) {\n      const control = document.createElement('button');\n      const direction = i === 0 ? 'left' : 'right';\n      control.className = `control control--${direction}`;\n\n      const image = document.createElement('img');\n      image.className = 'control__icon';\n      image.src = ICONS[direction];\n      control.appendChild(image);\n\n      control.onclick = i === 0 ? () => this.back_() : () => this.next_();\n\n      this.containerElement_.appendChild(control);\n    }\n\n    this.appElement_.appendChild(this.containerElement_);\n  }\n\n  registerKeys() {\n    document.addEventListener('keydown', (e) => {\n      if (e.keyCode === 37) {\n        e.preventDefault();\n        this.back_();\n      }\n      if (e.keyCode === 39) {\n        e.preventDefault();\n        this.next_();\n      }\n    });\n  }\n\n  back_() {\n    this.cardController_.navigateBack();\n  }\n\n  next_() {\n    this.cardController_.navigateNext();\n  }\n}\n","import { PAGE_COUNT, FRONT_IMAGE, BACKGROUND_IMAGE, CARD_PAGE } from './constants';\nimport { preloadImage } from './util/helpers';\n\nimport BackgroundController from './controllers/background';\nimport CardController from './controllers/card';\nimport LoadingController from './controllers/loading';\nimport ControlController from './controllers/control';\n\n(() => {\n  const appElement = document.getElementById('app');\n\n  const cardController = new CardController(appElement, PAGE_COUNT);\n  const controlController = new ControlController(appElement, cardController);\n  const loadingController = new LoadingController();\n\n  loadingController.show();\n\n  preloadImage(BACKGROUND_IMAGE)\n    .then(() => {\n      new BackgroundController().show(BACKGROUND_IMAGE);\n      return preloadImage(FRONT_IMAGE);\n    })\n    .then(() => {\n      const images = new Array(PAGE_COUNT);\n      for (let i = 0; i < images.length; ++i) {\n        images[i] = CARD_PAGE(i + 1);\n      }\n      cardController.createPages(images);\n      cardController.build();\n      loadingController.hide();\n      cardController.mount();\n      controlController.mount();\n      controlController.registerKeys();\n    });\n})();\n"]}